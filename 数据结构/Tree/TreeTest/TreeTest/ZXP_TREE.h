#ifndef ZXP_TREE_H_H
#define ZXP_TREE_H_H
/* 1.树的定义和基本术语
在树中,常常将数据元素称为结点(node).
树是n>==0个结点的有限集合,当n=0时,称为空树.任意一个非空树满足以下条件:
1)有且仅有一个特定的称为根的结点;
2)当n>1时,除根结点外的其余结点被分成m个(m>0)个互不相交的有限集合,T1,T2,...TN,其中每个
集合又是一棵树,并称为这个根节点的子树.
可见,树的定义是递归的.
2.树的基本术语:
1)结点和树的度:结点所拥有子树的个数,称为结点的度.树中各结点度的最大值称为树的度.
2)叶子结点,分支结点:度为0的结点称为叶子结点或终端结点，度不为0的结点称为分支结点.
3)孩子结点,双亲结点,兄弟结点
4)路径,路径长度:在树中路径长度是唯一的.
5)祖先,子孙
6)结点的层数,树的深度
7)层序编号
8)有序树,无序树
9)森林
10)重构*/
/* 树的遍历:从根结点出发,按照某种次序访问树中的所有结点,使得每个结点被访问且仅被反问一次.
1)前序遍历:
按照从左到右的顺序遍历根结点的每一棵子树.
2)后序遍历:
按照从左到右的顺序后序遍历根结点的每一棵自树;
访问根节点.
3)层序遍历:
广度遍历,从根节点开始层层遍历.
*/
#endif // ZXP_TREE_H_H